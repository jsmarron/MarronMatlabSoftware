disp('Running MATLAB script file DiProPermXYtest.m') ;
%
%    FOR DEVELOPMENT AND TESTING OF MATLAB FUNCTION DiProPermXY,
%    DiProPermXY, DIrection PROjection PERMutation based
%        mean hypothesis test, intended for High Dimension, 
%        Low Sample Size settings
%        This version developed by Xi Yang, to include
%            Balanced permutations
%            Fast DWD
%            Confidence Intervals for the Z score


itest = 212 ;     %  1,...,75  Simple parameter tests from DiProPermSMtest.m
                  %  101,... First round of simulations
                  %  101 - single simple Gaussian example (each of DWD,MD,MDP,SVM)
                  %  102 - single balanced Gaussian mixture (each of DWD,MD,MDP,SVM)
                  %  103 - single unbalanced Gaussian mixture (each of DWD,MD,MDP,SVM)
                  %  111 - explore Gaussian mean differences DWD, t-stat & MD
                  %  112 - explore Gaussian mean differences MD, t-stat & MD
                  %  113 - explore Gaussian mean differences SVM, t-stat & MD
                  %             Note:  a number of the above are in Directory
                  %                  Research/ComplexPopn/DiProPerm
                  %  201,...,216  More tests of newer features



if itest < 100 ;    %  then do simple parameter tests, on small data set

  rng(66430983) ;

  data1 = randn(50,10) ;
  data2 = 1 + randn(50,10) ;

  figure(1) ;
  clf ;


  if itest == 1 ;    % simple test of all defaults

    disp('Simple Test of All Defaults') ;
    DiProPermXY(data1,data2) ;


  elseif itest == 2 ;    % try titles

    disp('Experiment with titles') ;
    paramstruct = struct('title1str','Test Left Hand Title', ...
                         'title2str','Test Right Hand Title') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 3 ;    % try smaller nsim, for faster turnaround

    paramstruct = struct('nsim',50, ...
                         'title1str','Reduce nsim to 50') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 4 ;    % manually set idir = 1

    paramstruct = struct('idir',1, ...
                         'nsim',50, ...
                         'title1str','Manually set idir = 1') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 5 ;    % try out mean difference

    paramstruct = struct('idir',2, ...
                         'nsim',50, ...
                         'title1str','idir = 2, mean difference') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 6 ;    % try out MDP

    %{
    disp('Note:  This now creates an intentional error') ;
    disp('       Will test MDP further below') ;
    %}

    paramstruct = struct('idir',3, ...
                         'nsim',50, ...
                         'title1str','idir = 3, Maximal Data Piling') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 7 ;    % try out FLD

    paramstruct = struct('idir',4, ...
                         'nsim',50, ...
                         'title1str','idir = 4, FLD') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 8 ;    % try out SVM

    paramstruct = struct('idir',5, ...
                         'nsim',50, ...
                         'title1str','idir = 5, SVM') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 9 ;    % try out all pvalues

    paramstruct = struct('ipval',1, ...
                         'nsim',50, ...
                         'title1str','ipval = 1, all') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 10 ;    % try out empirical only p-value

    paramstruct = struct('ipval',2, ...
                         'nsim',50, ...
                         'title1str','ipval = 2, empirical only') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 11 ;    % try out Z-score only

    paramstruct = struct('ipval',3, ...
                         'nsim',50, ...
                         'title1str','ipval = 3, Z-score only') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 12 ;    % deliberately unsupported p-value

    paramstruct = struct('ipval',-1, ...
                         'nsim',50, ...
                         'title1str','ipval = -1, deliberately unsupported p-val') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 13 ;    %  try small nreport

    paramstruct = struct('nreport',5, ...
                         'nsim',50, ...
                         'title1str','test nreport = 5, but no iscreenwrite') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 14 ;    %  try small nreport, and iscreenwrite = 1

    paramstruct = struct('nreport',5, ...
                         'nsim',50, ...
                         'title1str','test nreport = 5, and iscreenwrite = 1', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 15 ;    %  run twice, check different numerical answers

    axh1 = subplot(1,2,1) ;
    axh2 = subplot(1,2,2) ;
    vaxh = [axh1 axh2] ;
    paramstruct = struct('nsim',50, ...
                         'title1str','Check no seed gives different answers', ...
                         'vaxh',vaxh, ...
                         'ishowperm',0, ...
                         'iscreenwrite',1) ;
    [stat,pval,zscore] = DiProPermXY(data1,data2,paramstruct) 

    figure(2) ;
    clf ;
    axh1 = subplot(1,2,1) ;
    axh2 = subplot(1,2,2) ;
    vaxh = [axh1 axh2] ;
    paramstruct = struct('nsim',50, ...
                         'title1str','Check no seed gives different answers', ...
                         'vaxh',vaxh, ...
                         'ishowperm',0, ...
                         'iscreenwrite',1) ;
    [stat,pval,zscore] = DiProPermXY(data1,data2,paramstruct) 


  elseif itest == 16 ;    %  run twice, check same numerical answers

    axh1 = subplot(1,2,1) ;
    axh2 = subplot(1,2,2) ;
    vaxh = [axh1 axh2] ;
    paramstruct = struct('nsim',50, ...
                         'seed',403984386, ...
                         'title1str','Check specified seed results in same answers', ...
                         'vaxh',vaxh, ...
                         'ishowperm',0, ...
                         'iscreenwrite',1) ;
    [stat,pval,zscore] = DiProPermXY(data1,data2,paramstruct) 

    figure(2) ;
    clf ;
    axh1 = subplot(1,2,1) ;
    axh2 = subplot(1,2,2) ;
    vaxh = [axh1 axh2] ;
    paramstruct = struct('nsim',50, ...
                         'seed',403984386, ...
                         'title1str','Check specified seed results in same answers', ...
                         'vaxh',vaxh, ...
                         'ishowperm',0, ...
                         'iscreenwrite',1) ;
    [stat,pval,zscore] = DiProPermXY(data1,data2,paramstruct) 


  elseif itest == 17 ;    %  try icolor = default

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'icolor',1, ...
                         'title1str','test icolor set to default', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 18 ;    %  try icolor = 0, all black

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'icolor',0, ...
                         'title1str','test icolor set to 0, all black', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 19 ;    %  try markerstr = + 

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'markerstr','+', ...
                         'title1str','test markerstr = +', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 20 ;    %  try two element markerstr 

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'markerstr',['^';'v'], ...
                         'title1str','test two element markerstr', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 21 ;    %  try default ibigdot

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'ibigdot',0, ...
                         'title1str','test default ibigdot', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 22 ;    %  try ibigdot = 1

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'ibigdot',1, ...
                         'title1str','test ibigdot = 1', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 23 ;    %  fiddle datovlaymax

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'datovlaymax',0.3, ...
                         'datovlaymin',0.1, ...
                         'title1str','test low data overlay range', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 24 ;    %  fiddle datovlaymax

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'datovlaymax',0.7, ...
                         'datovlaymin',1.1, ...
                         'title1str','test silly data overlay range', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 25 ;    %  test legendcellstr

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'legendcellstr',{{'Class 1' 'Class 2'}}, ...
                         'title1str','test legendcellstr', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 26 ;    %  test both titles

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'title1str','test both titles', ...
                         'title2str','test title 2', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 27 ;    %  test titlefontsize

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'title1str','test title font size', ...
                         'titlefontsize',18, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 28 ;    %  test x labels

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'title1str','test xlabels', ...
                         'xlabel1str','X Label 1', ...
                         'xlabel2str','X Label 2', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 29 ;    %  test x & y labels

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'title1str','test xlabels & ylabels', ...
                         'xlabel1str','X Label 1', ...
                         'xlabel2str','X Label 2', ...
                         'ylabel1str','Y Label 1', ...
                         'ylabel2str','Y Label 2', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 30 ;    %  test label fontsize

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'title1str','test label font size', ...
                         'xlabel1str','X Label 1', ...
                         'xlabel2str','X Label 2', ...
                         'ylabel1str','Y Label 1', ...
                         'ylabel2str','Y Label 2', ...
                         'labelfontsize',18, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 31 ;    %  test vaxh

    axh1 = subplot(2,2,2) ;
    axh2 = subplot(2,2,4) ;
    vaxh = [axh1 axh2] ;
    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'title1str','test vaxh, which controls subplots', ...
                         'vaxh',vaxh, ...
                         'ishowperm',0, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 32 ;    %  test savestr, full color

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'title1str','test savestr, full color', ...
                         'title2str','look for file temp.ps', ...
                         'savestr','temp', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 33 ;    %  test savestr, black & white

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'icolor',0, ...
                         'title1str','test savestr, black & white', ...
                         'title2str','look for file temp.ps', ...
                         'savestr','temp', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 34 ;    %  test savestr, color

    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'icolor',1, ...
                         'title1str','test savestr, color', ...
                         'title2str','look for file temp.ps', ...
                         'savestr','temp', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 35 ;    %  test savestr, color, input colors

    icolor = [[1 0 1]; [0 1 1]] ;
    paramstruct = struct('nsim',50, ...
                         'nreport',25, ...
                         'icolor',icolor, ...
                         'title1str','test savestr, color', ...
                         'title2str','look for file temp.ps', ...
                         'savestr','temp', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 36 ;    % try out pvalues & Z-score

    paramstruct = struct('ipval',5, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','ipval = 5, not valid', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 37 ;    % test icolor wrong number of columns

    icolor = [[0 0.3 0.4 0.5]; ...
              [1 0.9 0.8 0.7]] ;
    paramstruct = struct('ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'icolor',icolor, ...
                         'title1str','Test Wrong # of Columns in icolor', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 38 ;    % test icolor wrong number of rows

    icolor = [[0 0.3 0.4]; ...
              [1 0.9 0.8]; ...
              [1 0.1 0.2]] ;
    paramstruct = struct('ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'icolor',icolor, ...
                         'title1str','Test Wrong # of Rows in icolor', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 39 ;    % wrong number of input markers

    disp('test wrong number of input markers') ;
    markerstr = ['^';'^';'^';'^';'^';'v';'v';'v';'v';'v'] ;
    paramstruct = struct('ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'markerstr',markerstr, ...
                         'title1str','Test Wrong # of Input markers', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 40 ;    % test different marker for each data point

    markerstr = ['s';'s';'s';'s';'s';'o';'o';'o';'o';'o'; ...
                 'x';'x';'x';'x';'x';'+';'+';'+';'+';'+'] ;
    paramstruct = struct('ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'markerstr',markerstr, ...
                         'title1str','Test Differing Markers', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 41 ;    % test unbalanced design

    markerstr = ['s';'s';'s';'s';'s';'o';'o';'o';'o';'o'; ...
                 'x';'x';'x';'x';'x'] ;
    paramstruct = struct('ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'markerstr',markerstr, ...
                         'title1str','Test Unbalanced Design', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2(:,1:5),paramstruct) ;


  elseif itest == 42 ;    % test unbalanced design & Custom Labels

    markerstr = ['s';'s';'s';'s';'s';'o';'o';'o';'o';'o'; ...
                 'x';'x';'x';'x';'x'] ;
    paramstruct = struct('ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'icolor',[[0 1 0]; [1 0 1]], ...
                         'markerstr',markerstr, ...
                         'legendcellstr',{{'Class1 +' 'Class2 -'}}, ...
                         'title1str','Test Unbal. Design & Custom Labels', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2(:,1:5),paramstruct) ;


  elseif itest == 43 ;    % test unequal data dimensions

    disp('test unequal data dimensions') ;
    paramstruct = struct('ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'icolor',[[0 1 0]; [1 0 1]], ...
                         'title1str','Test unequal data dimensions', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2(1:20,:),paramstruct) ;


  elseif itest == 44 ;    % test invalid savestr

    disp('test invalid (numeric) savestr') ;
    paramstruct = struct('ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Test invalid savestr', ...
                         'savestr',3, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 45 ;    % test DWD, Mean Difference, Default titles

    disp('test DWD, Mean Difference, Default titles') ;
    paramstruct = struct('idir',1, ...
                         'istat',2, ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 46 ;    % test MD, Mean Difference, Default titles

    disp('test MD, Mean Difference, Default titles') ;
    paramstruct = struct('idir',2, ...
                         'istat',2, ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 47 ;    % test MDP, Mean Difference, Default titles

    disp('test MDP, Mean Difference, Default titles') ;
    paramstruct = struct('idir',3, ...
                         'istat',2, ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 48 ;    % test FLD, Mean Difference, Default titles

    disp('test FLD, Mean Difference, Default titles') ;
    paramstruct = struct('idir',4, ...
                         'istat',2, ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 49 ;    % test SVM, Mean Difference, Default titles

    disp('test SVM, Mean Difference, Default titles') ;
    paramstruct = struct('idir',5, ...
                         'istat',2, ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 50 ;    % test multiple directions, tstat

    disp('test multiple directions, tstat') ;
    paramstruct = struct('mctl',[[1 1]; [2 1]; [4 1]], ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Test multiple directions & tstat', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 51 ;    % test multiple directions, MD

    disp('test multiple directions, MD') ;
    paramstruct = struct('mctl',[[1 2]; [2 2]; [3 2]], ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Test multiple directions & MD', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 52 ;    % test multiple statistics, DWD dir

    disp('test multiple statistics') ;
    paramstruct = struct('mctl',[[1 1]; [1 2]; [1 3]; [1 4]], ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Test multiple statistics', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 53 ;    % test multiple statistics & dir

    disp('test multiple settings') ;
    paramstruct = struct('mctl',[[1 4]; [2 3]; [3 2]; [4 1]], ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Test multiple settings', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 54 ;    % test multiple statistics & dir & file saves

    paramstruct = struct('mctl',[[1 4]; [2 3]; [3 2]; [4 1]], ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Test multiple settings', ...
                         'savestr','temp', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;
    disp('Check for output files, starting with "temp"') ;


  elseif itest == 55 ;    % test vaxh not a row vector

    axh1 = subplot(2,3,1) ;
    axh2 = subplot(2,3,4) ;
    vaxh = [axh1; axh2] ;
    disp('Look for inconsistent vaxh error') ;
    paramstruct = struct('ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Test bad vaxh (not a row vector)', ...
                         'vaxh',vaxh, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 56 ;    % test vaxh not all handles

    axh1 = subplot(2,3,1) ;
    axh2 = subplot(2,3,4) ;
    vaxh = [axh1 37] ;
    disp('Look for inconsistent vaxh error') ;
    paramstruct = struct('ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Test bad vaxh (not all handles)', ...
                         'vaxh',vaxh, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 57 ;    % test multiple statistics & dir & inconsistent vaxh

    axh1 = subplot(2,3,1) ;
    axh2 = subplot(2,3,4) ;
    axh3 = subplot(2,3,2) ;
    axh4 = subplot(2,3,5) ;
    axh5 = subplot(2,3,3) ;
    axh6 = subplot(2,3,6) ;
    vaxh = [[axh1 axh2]; [axh3 axh4]] ;
    disp('Look for inconsistent mctl and vaxh error') ;
    paramstruct = struct('mctl',[[1 4]; [2 3]; [3 2]], ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Test inconsistent vaxh', ...
                         'vaxh',vaxh, ...
                         'ishowperm',0, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 58 ;    % test real vaxh

    axh1 = subplot(2,3,1) ;
    axh2 = subplot(2,3,4) ;
    axh3 = subplot(2,3,2) ;
    axh4 = subplot(2,3,5) ;
    axh5 = subplot(2,3,3) ;
    axh6 = subplot(2,3,6) ;
    vaxh = [[axh1 axh2]; [axh3 axh4]; [axh5 axh6]] ;
    paramstruct = struct('mctl',[[1 4]; [2 3]; [3 2]], ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Test multiple settings', ...
                         'vaxh',vaxh, ...
                         'ishowperm',0, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 59 ;    % test real vaxh, and .ps output

    axh1 = subplot(2,3,1) ;
    axh2 = subplot(2,3,4) ;
    axh3 = subplot(2,3,2) ;
    axh4 = subplot(2,3,5) ;
    axh5 = subplot(2,3,3) ;
    axh6 = subplot(2,3,6) ;
    vaxh = [[axh1 axh2]; [axh3 axh4]; [axh5 axh6]] ;
    disp('Check file "temp"') ;
    paramstruct = struct('mctl',[[1 4]; [2 3]; [3 2]], ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Test multiple settings', ...
                         'vaxh',vaxh, ...
                         'ishowperm',0, ...
                         'savestr','temp', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 60 ;    % test AUC stat

    paramstruct = struct('istat',5, ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Test AUC, DWD', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 61 ;    % test AUC stat, null distribution

    rng(66430983) ;

    data1 = randn(10,10) ;
    data2 = randn(10,10) ;

    paramstruct = struct('istat',5, ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Test AUC, null distribution, DWD', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 62 ;    % test AUC stat, serious distribution

    rng(66430983) ;

    data1 = randn(10,10) ;
    data2 = 0.4 + randn(10,10) ;

    paramstruct = struct('istat',5, ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Test AUC, serious distribution, DWD', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 63 ;    % test AUC stat, against others

    rng(66430983) ;

    data1 = randn(10,10) ;
    data2 = 0.4 + randn(10,10) ;

    paramstruct = struct('mctl',[[1 1]; [1 2]; [1 5]], ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Test AUC', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 64 ;    % test Paired t stat, indep data

    paramstruct = struct('mctl',[[1 6]; [1 1]], ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Paired vs. Unpaired t, indep', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 65 ;    % test Paired t stat, paired data

    [temp,vind] = sort(ones(1,50) * data1) ;
    data1s = data1(:,vind) ;
    [temp,vind] = sort(ones(1,50) * data2) ;
    data2s = data2(:,vind) ;
    paramstruct = struct('mctl',[[1 6]; [1 1]], ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Paired vs. Unpaired t, paired', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1s,data2s,paramstruct) ;


  elseif itest == 66 ;    % test Paired t stat, unpaired data

    [temp,vind] = sort(ones(1,50) * data1) ;
    data1s = data1(:,vind) ;
    [temp,vind] = sort(-ones(1,50) * data2) ;
    data2s = data2(:,vind) ;
    paramstruct = struct('mctl',[[1 6]; [1 1]], ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Paired vs. Unpaired t, unpaired', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1s,data2s,paramstruct) ;


  elseif itest == 67 ;    % test Paired t stat, differing n1 & n2

    disp('Check get error for differing sample sizes, for paired t statistics') ;

    paramstruct = struct('istat',6, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'title1str','Test Paired t Statistic, DWD', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2(:,1:(end - 1)),paramstruct) ;


  elseif itest == 68 ;    % test MDP & t-stat

    disp('Check Error from call to MDP & t-stat') ;
    paramstruct = struct('idir',3, ...
                         'istat',1, ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 69 ;    % test MDP & Median / MAD

    disp('Check Error from call to MDP & median/MAD') ;
    paramstruct = struct('idir',3, ...
                         'istat',4, ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 70 ;    % test MDP & ROC

    disp('Check Error from call to MDP & ROC') ;
    paramstruct = struct('idir',3, ...
                         'istat',5, ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 71 ;    % test MDP & Paired t

    disp('Check Error from call to MDP & Paired t') ;
    paramstruct = struct('idir',3, ...
                         'istat',6, ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 72 ;    % test MDP & CCI

    disp('Check Error from call to MDP & CCI') ;
    paramstruct = struct('idir',3, ...
                         'istat',7, ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 73 ;    % test DWD & CCI

    disp('Check DWD & CCI') ;
    paramstruct = struct('idir',1, ...
                         'istat',7, ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 74 ;    % test MD & CCI

    disp('Check MD & CCI') ;
    paramstruct = struct('idir',2, ...
                         'istat',7, ...
                         'ipval',1, ...
                         'nsim',50, ...
                         'nreport',25, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 75 ;    % try out Z-score & CI only

    paramstruct = struct('ipval',4, ...
                         'nsim',50, ...
                         'title1str','ipval = 4, Z-score & CI only') ;
    DiProPermXY(data1,data2,paramstruct) ;



  end ;


elseif itest < 200 ;    %  then do part of 1st round of simulation study

  if itest < 110 ;    %  then run single sample simulations, (each of DWD,MD,MDP,SVM)

    rng(66430983) ;


    if itest == 101 ;    %  single simple Gaussian example 

      diststr = 'Simple Gaussian' ;
      savestrbase = ['DiProPermTestIP' num2str(itest) 'SimpGauss'] ;
      n1 = 30 ;
      n2 = 30 ;
      d = 100 ;

      data1 = randn(d,n1) ;
      data2 = 0.2 + randn(d,n2) ;


    elseif itest == 102 ;    %  balanced Gaussian mixture

      diststr = 'Balanced Gaussian Mix' ;
      savestrbase = ['DiProPermTestIP' num2str(itest) 'BalGaussMix'] ;
      n1 = 30 ;
      n2 = 30 ;
      d = 100 ;

      data1 = randn(d,n1) ;
      data1(2,1:(n1/2)) = data1(2,1:(n1/2)) + 4 ;
      data2 = randn(d,n2) ;
      data2(1,:) = data2(1,:) + 1.2 ;
      data2(2,1:(n2/2)) = data2(2,1:(n2/2)) + 4 ;


    elseif itest == 103 ;    %  unbalanced Gaussian mixture

      diststr = 'Unalanced Gaussian Mix' ;
      savestrbase = ['DiProPermTestIP' num2str(itest) 'UnbalGaussMix'] ;
      n1 = 30 ;
      n2 = 30 ;
      d = 100 ;

      data1 = randn(d,n1) ;
      data1(2,1:(n1/3)) = data1(2,1:(n1/3)) + 4 ;
      data2 = randn(d,n2) ;
      data2(1,:) = data2(1,:) + 1.2 ;
      data2(2,1:(2*n2/3)) = data2(2,1:(2*n2/3)) + 4 ;


    end ;


    figure(1) ;
    clf ;
    mctl = [[1 2]; [2 2]; [3 2]; [5 2]; ...

            [1 3]; [2 3]; [3 3]; [5 3]] ;
    axh11 = subplot(4,4,1) ;
    axh12 = subplot(4,4,5) ;
    axh21 = subplot(4,4,2) ;
    axh22 = subplot(4,4,6) ;
    axh31 = subplot(4,4,3) ;
    axh32 = subplot(4,4,7) ;
    axh41 = subplot(4,4,4) ;
    axh42 = subplot(4,4,8) ;
    axh51 = subplot(4,4,9) ;
    axh52 = subplot(4,4,13) ;
    axh61 = subplot(4,4,10) ;
    axh62 = subplot(4,4,14) ;
    axh71 = subplot(4,4,11) ;
    axh72 = subplot(4,4,15) ;
    axh81 = subplot(4,4,12) ;
    axh82 = subplot(4,4,16) ;
    vaxh = [[axh11 axh12]; ...
            [axh21 axh22]; ...
            [axh31 axh32]; ...
            [axh41 axh42]; ...
            [axh51 axh52]; ...
            [axh61 axh62]; ...
            [axh71 axh72]; ...
            [axh81 axh82]] ;
    paramstruct = struct('mctl',mctl, ...
                         'vaxh',vaxh, ...
                         'ishowperm',0, ...
                         'nsim',1000, ...
                         'nreport',50, ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


%  Old version of above, requiring separate calls
%{
    %  Run DWD based DiProPerm
    %
    figure(1) ;
    clf ;
    paramstruct = struct('idir',1, ...
                         'nsim',1000, ...
                         'nreport',50, ...
                         'title1str',[diststr ', n1 = ' num2str(n1) ...
                                              ', n2 = ' num2str(n2) ...
                                              ', d = ' num2str(d)], ...
                         'title2str','DWD based DiProPerm', ...
                         'savestr',[savestrbase 'DWD'], ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


    %  Run MD based DiProPerm
    %
    figure(2) ;
    clf ;
    paramstruct = struct('idir',2, ...
                         'nsim',1000, ...
                         'nreport',50, ...
                         'title1str',[diststr ', n1 = ' num2str(n1) ...
                                              ', n2 = ' num2str(n2) ...
                                              ', d = ' num2str(d)], ...
                         'title2str','MD based DiProPerm', ...
                         'savestr',[savestrbase 'MD'], ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


    %  Run MDP based DiProPerm
    %
    figure(3) ;
    clf ;
    paramstruct = struct('idir',3, ...
                         'nsim',1000, ...
                         'nreport',50, ...
                         'title1str',[diststr ', n1 = ' num2str(n1) ...
                                              ', n2 = ' num2str(n2) ...
                                              ', d = ' num2str(d)], ...
                         'title2str','MDP based DiProPerm', ...
                         'savestr',[savestrbase 'MDP'], ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


    %  Run SVM based DiProPerm
    %
    figure(4) ;
    clf ;
    paramstruct = struct('idir',5, ...
                         'nsim',1000, ...
                         'nreport',50, ...
                         'title1str',[diststr ', n1 = ' num2str(n1) ...
                                              ', n2 = ' num2str(n2) ...
                                              ', d = ' num2str(d)], ...
                         'title2str','SVM based DiProPerm', ...
                         'savestr',[savestrbase 'SVM'], ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;
%}



  elseif itest < 120 ;    %  explore Gaussian mean differences

    nsim = 1000 ;
    ndataset = 20 ;
    d = 50 ;
    n = 20 ;
    vmean = [0 0.2 0.5 1 2 5 10] ;

    rng(10647560) ;

    if itest == 111 ;    %  explore Gaussian mean differences DWD, t-stat & MD
      idir = 1 ;
      dirstr = 'DWD' ;
    elseif itest == 112 ;    %  explore Gaussian mean differences MD, t-stat & MD
      idir = 2 ;
      dirstr = 'MD' ;
    elseif itest == 113 ;    %  explore Gaussian mean differences SVM, t-stat & MD
      idir = 5 ;
      dirstr = 'SVM' ;
    end ;


    mzscoret = [] ;
    mzscoremd = [] ;
    for idataset = 1:ndataset ;

      %  Generate data
      %
      rawdata = randn(d,2 * n) ;


      vzscoret = [] ;
      vzscoremd = [] ;
      for mean = vmean ;

        disp(['    Working on idataset ' num2str(idataset) ',   mean = ' num2str(mean)]) ;

        data1 = rawdata(:,1:n) ;
        data2 = rawdata(:,(n + 1):(2 * n)) + mean / sqrt(d) ;

        paramstruct = struct('mctl',[[idir 1]; [idir 2]], ...
                             'nsim',nsim, ...
                             'nreport',100, ...
                             'iscreenwrite',1) ;
        [vstat, vpval, vzscore] = DiProPermXY(data1,data2,paramstruct) ;
        vzscoret = [vzscoret; vzscore(1)] ;
        vzscoremd = [vzscoremd; vzscore(2)] ;

      end ;


      mzscoret = [mzscoret vzscoret] ;
      mzscoremd = [mzscoremd vzscoremd] ;

    end ;


    %  make output graphics
    %
    savestrbase = ['DiProPermTestIP' num2str(itest) 'DiffMeans' dirstr] ;

    figure(1) ;
    clf ;
    plot(vmean',mzscoret) ;
    axis([0,10,-5,25]) ;
      hold on ;
        plot([0; max(vmean)], [norminv(1 - 0.05); norminv(1 - 0.05)], 'r--') ;
        plot([0; max(vmean)], [norminv(1 - 0.001); norminv(1 - 0.001)], 'r--') ;
      hold off ;
      title(['For DiProPerm, with ' dirstr ' dirn, and t-stat, d = ' num2str(d) ...
                   ', n = ' num2str(n) ', nsim = ' num2str(nsim) ', shift means']) ;
      xlabel('Separation between 2 class means') ;
      ylabel('Gaussian Fit Z-score') ;
      orient landscape ;
      print('-dpsc2',[savestrbase '-t']) ;

    figure(2) ;
    clf ;
    plot(vmean',mzscoremd) ;    
    axis([0,10,-5,25]) ;
      hold on ;
        plot([0; max(vmean)], [norminv(1 - 0.05); norminv(1 - 0.05)], 'r--') ;
        plot([0; max(vmean)], [norminv(1 - 0.001); norminv(1 - 0.001)], 'r--') ;
      hold off ;
      title(['For DiProPerm, with ' dirstr ' dirn, and MD, d = ' num2str(d) ...
                   ', n = ' num2str(n) ', nsim = ' num2str(nsim) ', shift means']) ;
      xlabel('Separation between 2 class means') ;
      ylabel('Gaussian Fit Z-score') ;
      orient landscape ;
      print('-dpsc2',[savestrbase '-md']) ;


  end ;


else ;    %  Test new parts

  %  Start with previous test data
  %
  rng(66430983) ;

  data1 = randn(50,10) ;
  data2 = 1 + randn(50,10) ;

  figure(1) ;
  clf ;


  if itest == 201 ;    % check balanced permutation index set to  unbalanced

    paramstruct = struct('iper',1, ...
                         'nsim',50, ...
                         'title1str','perm index set to unbalanced') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 202 ;    % check balanced permutation index set to  balanced

    paramstruct = struct('iper',2, ...
                         'nsim',50, ...
                         'title1str','perm index set to balanced') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 203 ;    % Test DWDLarge

    paramstruct = struct('idir',6, ...
                         'nsim',50, ...
                         'title1str','Try DWDLarge direction') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 204 ;    % DWDLarge, no signal

    data2 = data2 - 1 ;

    paramstruct = struct('idir',6, ...
                         'nsim',50, ...
                         'title1str','DWDLarge, no signal') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 205 ;    % DWDLarge, balanced permutations

    paramstruct = struct('iper',2, ...
                         'idir',6, ...
                         'nsim',50, ...
                         'title1str','DWDLarge Balanced Perms') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 206 ;    % Time trials DWD vs. DWDLarge

    tic ;
    paramstruct = struct('idir',1, ...
                         'nsim',1000, ...
                         'title1str','DWD, 1000 sims', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;
    t1 = toc ;

    figure(2) ;
    clf ;

    tic ;
    paramstruct = struct('idir',6, ...
                         'nsim',1000, ...
                         'title1str','DWDLarge, 1000 sims', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;
    t2 = toc ;

    disp(' ') ;
    disp(['Time for DWD = ' num2str(t1) ' secs']) ;

    disp(' ') ;
    disp(['Time for DWDLarge = ' num2str(t2) ' secs']) ;


  elseif itest == 207 ;    % DWD all vs. balanced

    paramstruct = struct('iper',1, ...
                         'idir',1, ...
                         'nsim',1000, ...
                         'nreport',20, ...
                         'title1str','DWD, all', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;

    figure(2) ;
    clf ;

    tic ;
    paramstruct = struct('iper',2, ...
                         'idir',1, ...
                         'nsim',1000, ...
                         'nreport',20, ...
                         'title1str','DWD, balanced', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 208 ;    % DWDLarge all vs. balanced

    paramstruct = struct('iper',1, ...
                         'idir',6, ...
                         'nsim',1000, ...
                         'nreport',20, ...
                         'title1str','DWDLarge, all', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;

    figure(2) ;
    clf ;

    tic ;
    paramstruct = struct('iper',2, ...
                         'idir',6, ...
                         'nsim',1000, ...
                         'nreport',20, ...
                         'title1str','DWDLarge, balanced', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 209 ;    % Strong signal all vs. balanced

    data2 = data2 + 5 ;

    paramstruct = struct('iper',1, ...
                         'idir',1, ...
                         'nsim',100, ...
                         'nreport',20, ...
                         'title1str','Strong Signal, all', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;

    figure(2) ;
    clf ;

    tic ;
    paramstruct = struct('iper',2, ...
                         'idir',1, ...
                         'nsim',100, ...
                         'nreport',20, ...
                         'title1str','Strong Signal, balanced', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 210 ;    % Strong signal all vs. balanced

    data2 = data2 + 5 ;

    paramstruct = struct('iper',1, ...
                         'idir',6, ...
                         'nsim',100, ...
                         'nreport',20, ...
                         'title1str','Strong Signal, all', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;

    figure(2) ;
    clf ;

    tic ;
    paramstruct = struct('iper',2, ...
                         'idir',6, ...
                         'nsim',100, ...
                         'nreport',20, ...
                         'title1str','Strong Signal, balanced', ...
                         'iscreenwrite',1) ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 211 ;    % Strong Signal Context of Xi Yang

    rng(66430983) ;
    data1 = randn(100,100) ;
    data2 = 5 + randn(100,100) ;

    paramstruct = struct('idir',6, ...
                         'nsim',100, ...
                         'title1str','Xi Yang strong signal') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 212 ;    % No Signal Context of Xi Yang

    rng(66430983) ;
    data1 = randn(100,100) ;
    data2 = randn(100,100) ;

    paramstruct = struct('idir',6, ...
                         'nsim',100, ...
                         'title1str','Xi Yang No signal') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 213 ;    % No Signal Context of Xi Yang, regular DWD

    rng(66430983) ;
    data1 = randn(100,100) ;
    data2 = randn(100,100) ;

    paramstruct = struct('idir',1, ...
                         'nsim',100, ...
                         'title1str','Xi Yang No signal') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 214 ;    % Strong Signal Context of Xi Yang, regular DWD

    rng(66430983) ;
    data1 = randn(100,100) ;
    data2 = 5 + randn(100,100) ;

    paramstruct = struct('idir',1, ...
                         'nsim',100, ...
                         'title1str','Xi Yang strong signal') ;
    DiProPermXY(data1,data2,paramstruct) ;




%{
  elseif itest == 209 ;    % manually set ishowperm to 1

    paramstruct = struct('ishowperm',1, ...
                         'nsim',50, ...
                         'title1str','ishowperm = 1') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 210 ;    % manually set ishowperm to 0

    paramstruct = struct('ishowperm',0, ...
                         'nsim',50, ...
                         'title1str','ishowperm = 0') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 215 ;    % ishowperm = 3

    paramstruct = struct('ishowperm',3, ...
                         'nsim',50, ...
                         'title1str','ishowperm = 3') ;
    DiProPermXY(data1,data2,paramstruct) ;


  elseif itest == 216 ;    % ishowperm = 2

    paramstruct = struct('ishowperm',2, ...
                         'nsim',50, ...
                         'title1str','ishowperm = 2') ;
    DiProPermXY(data1,data2,paramstruct) ;
%}

  end ;


end ;
